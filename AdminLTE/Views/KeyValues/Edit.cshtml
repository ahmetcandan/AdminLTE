@model AdminLTE.Models.KeyValueView

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.KeyValueId)

    <div class="form-group">
        <label class="control-label col-md-2" translate="key-type"></label>
        <div class="col-md-10">
            @Html.DropDownList("KeyTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.KeyTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" translate="key"></label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Key, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Key, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" translate="value"></label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" translate="description"></label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" translate="start-date"></label>
        <div class="col-md-10 input-group input-group-padding">
            <div class="input-group-addon">
                <i class="fa fa-calendar"></i>
            </div>
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @data_inputmask = "'alias': 'dd/mm/yyyy'", @data_mask = "" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" translate="end-date"></label>
        <div class="col-md-10 input-group input-group-padding">
            <div class="input-group-addon">
                <i class="fa fa-calendar"></i>
            </div>
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @data_inputmask = "'alias': 'dd/mm/yyyy'", @data_mask = "" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" translate="is-active"></label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="modal-button">
            <div class="btn btn-primary" onclick="postForm(this, function () { $('#btn-values-refresh').click(); })" translate="save"></div>
        </div>
    </div>
</div>
}
